/ TODO: this could be refactored with _comment.html.slim, it's just
/ a little fiddly to do so

- comment = deleted_comment

div.comment data-id=(comment.id) data-markup=(comment.content)
  .votes
    div.upvote class=('active' if @voted == true)
      i.fa.icon-arrow-up
  .nonvotes
    - if @user
      div= link_to comment.paper.title, comment.paper
    = link_to comment.user.fullname, comment.user
    - if comment.parent
      |  in reply to #{link_to comment.parent.user.fullname, comment.parent.user}
    span.timeago
      =< timeago(comment.created_at)
      - if comment.cached_votes_up > 0 || comment.cached_votes_down > 0
        |  (<span class="score">#{comment.cached_votes_up-comment.cached_votes_down}</span> points)
    .body.tex2jax
      = simple_format(strip_tags(comment.content))
    p
      - unless comment.last_change.nil?
        | #{comment.last_change.event.capitalize} <a class="timeago-link" href="/comments/#{comment.id}/history">#{timeago(comment.last_change.created_at)}</a> by #{user_link(comment.last_change.user)}
    .actions
      a.permalink href="##{comment.id}" permalink
      - if current_user.id == comment.user_id || current_user.can_moderate?
        a.edit edit
        = link_to 'restore', restore_comment_path(comment), method: :post
      - else
        - if comment.reports.exists?(user_id: current_user.id)
            a.unreport reported (undo)
        - else
          a.report report
